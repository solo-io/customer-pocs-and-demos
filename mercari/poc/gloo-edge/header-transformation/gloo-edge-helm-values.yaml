crds:
  ## Only useful for Helm v2
  create: false
global:
  glooRbac:
    create: true
  glooStats:
    enabled: true
  extensions:
    rateLimit:
      enabled: true
    extAuth:
      enabled: true
      ## Deal with timeouts in the OIDC flow (Default: 200ms)
      requestTimeout: 1s
observability:
  enabled: false
prometheus:
  enabled: false
grafana:
  defaultInstallationEnabled: false
  rbac:
    namespaced: true
gloo-fed:
  enabled: false
gloo:
  glooMtls:
    enabled: false
  istioSDS:
    enabled: false
  settings:
    ## Bootstrap settings
    create: create
    ## Only watch for services and CRDS in following namespaces
    watchNamespaces:
    - apps
    - apps-configuration
    - gloo-system
    writeNamespace: gloo-system
    disableKubernetesDestinations: true
  discovery:
    enabled: false
    ## Whitelist mode for FDS polling
    fdsMode: BLACKLIST
  deployment:
    disableUsageStatistics: true
  gateway:
    enabled: true
    validation:
      enabled: true
      allowWarnings: true
      alwaysAcceptResources: true
      disableTransformationValidation: false
  gatewayProxies:
    gatewayProxy:
      gatewaySettings:
        ## Disable default gateways
        disableGeneratedGateways: false

        ## Custom access logging config
        accessLoggingService:
          accessLog:
          - fileSink:
              path: /dev/stdout
              stringFormat: >
                [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION%
                %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%"
                "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"

      ## Works in minikube with a tunnel but also on managed K8
      # service:
      #   type: LoadBalancer
      #   ## This is required if using AWS ELB controller (Note that classic LB does not work with TLS passthrough)
      #   extraAnnotations:
      #     kubernetes.io/ingress.class: alb
      #     service.beta.kubernetes.io/aws-load-balancer-type: "external"
      #     service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      #     service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
      #     external-dns.alpha.kubernetes.io/hostname: "apps.$DOMAIN_NAME"

      ## Following is useful if you setup a Kind cluster
      service:
        type: NodePort
        httpsFirst: false
        httpPort: 80
        httpNodePort: 31080
        httpsPort: 443
        httpsNodePort: 31443
      ## Disable if using either of the above
      # service:
      #   type: ClusterIP
